
template ptrTp<Type>{
    implement Type* {
        @instruction("CastInst", "PtrToInt", "i64")
        func toi64()->i64;

        @binary("==")
        func __equal__(rhs: Type*)->bool{
            return this.toi64() == rhs.toi64();
        }

        @binary("!=")
        func __not_equal__(rhs: Type*)->bool{
            return this.toi64() != rhs.toi64();
        }

    }
}

struct nullptr<T: template>{}

implement nullptr<T: template>{
    @static
    func create()->T *{
        var pointer: T*;
        // @warning 注意不同位数平台可能产生问题,
        *cast<i64 *>(&pointer) = 0;
        return pointer;
    }
}

export nullptr;
