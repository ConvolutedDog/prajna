template <Bits>
implement Float<Bits> {
    func Abs()->Float<Bits> {
        return __fabs<Float<Bits>>(this);
    }

    func Sin()->Float<Bits> {
        return __sin<Float<Bits>>(this);
    }

    func Cos()->Float<Bits> {
        return __cos<Float<Bits>>(this);
    }

    func Floor()->Float<Bits> {
        return __floor<Float<Bits>>(this);
    }

    func Ceil()->Float<Bits> {
        return __ceil<Float<Bits>>(this);
    }

    func Round()->Float<Bits> {
        return __round<Float<Bits>>(this);
    }

    func RoundEven()->Float<Bits> {
        return __roundeven<Float<Bits>>(this);
    }

    func Trunc()->Float<Bits> {
        return __trunc<Float<Bits>>(this);
    }

    @static
    func Largest()->Float<Bits> {
        return __largest<Float<Bits>>();
    }

    @static
    func Smallest()->Float<Bits> {
        return __smallest<Float<Bits>>();
    }

    @static
    func NaN()->Float<Bits> {
        return __nan<Float<Bits>>();

    }

    @static
    func Inf()->Float<Bits>{
        return __inf<Float<Bits>>();
    }
}
