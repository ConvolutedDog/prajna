import gpu;

// @test
// func testGpuFor1d(){
//     var shape = [1000];
//     var tmp_tensor = Tensor<i64, 1>::create(shape);

//     @gpu // 标注后, 编译器会将tmp_tensor的内存拷贝到gpu, 并在gpu上执行下面的运算
//     for i in 0 to shape[0]{
//         // tmp_tensor.at(i) = i[0];
//         tmp_tensor[i] = i;
//     }
//     // 运行完后, gpu的数据会自动拷贝的tmp_tensor上

//     for i in 0 to shape[0] {
//         testing::assert(tmp_tensor.data[i] == i);
//     }
// }

@test
func testGpuFor2d(){
    var shape = [10, 20];
    var tmp_tensor = Tensor<i64, 2>::create(shape);

    @gpu // 标注后, 编译器会将tmp_tensor的内存拷贝到gpu, 并在gpu上执行下面的运算
    for i in [0, 0] to shape{
        //这里面的tmp_tensor实际上一个gpu::Tensor
        tmp_tensor.at(i) = 1;
    }

    // 运行完后, gpu的数据会自动拷贝的tmp_tensor上
    for i in [0, 0] to shape{
        testing::assert(tmp_tensor.at(i) == 1);
    }
}
