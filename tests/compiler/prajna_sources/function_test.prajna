// func表示声明一个函数, -> i64表示返回值类型
func add(lhs: i64, rhs: i64) -> i64{
    return lhs + rhs;
}


func callRecursively(i: i64)->i64{
    if (i == 0) {return 0; }

    return callRecursively(i - 1);
}

// 若没有返回值类型, 则表示为void
func printHi(){
    "Hi\n".print();
}

func printHello(){
    "Hello\n".print();
}

func call(fun: func{()->void}*) {
    fun();
}

@test // @test表示函数的注解, 会被当做测试函数而执行
func testFunction(){
    testing::assert(add(3, 7) == 10);
    printHi();
    // fun_address表示存储printHi函数的变量, 其类型是函数"指针"类型,
    var fun_address = printHi;
    fun_address = printHello;
    fun_address();

    testing::assert(callRecursively(4) == 0);
    testing::assert(callRecursively(5) == 0);


    call(printHi);
    call(printHello);

}


func declTest()->void;

func declTest()->void{}
