

@test
func TestMain(){
    var p: Pointer<i64>;
    p._ToInt64();

    test::Assert(p._ToInt64() == 0i64);
    // test::Assert(p == Pointer<i64>::Null());
    test::Assert(p.IsNull());

    p = Pointer<i64>::New();
    test::Assert(!p.IsNull());
}

@test
func TestLocal() {
    var p: Pointer<i64>;
    p._ToInt64();

    test::Assert(p._ToInt64() == 0i64);
    test::Assert(p.IsNull());
    {
       var p1 = Pointer<i64>::New();
       test::Assert(!p1.IsNull());
       p = p1;
    }
    test::Assert(!p.IsNull());
}

@test
func TestIndex() {
    var p = Pointer<i64>::Allocate(10);
    p[9] = 10;
    test::Assert(p[9] == 10);
}


@test
func TestNested() {
    var p = Pointer<Pointer<i64>>::New();
}
