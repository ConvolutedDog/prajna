

@test
func testMain(){
    var p: ptr<i64>;
    p.toi64();

    debug::assert(p.toi64() == 0i64);
    // debug::assert(p == ptr<i64>::null());
    debug::assert(p.isNull());

    p = ptr<i64>::new();
    debug::assert(!p.isNull());
}

@test
func testLocal() {
    var p: ptr<i64>;
    p.toi64();

    debug::assert(p.toi64() == 0i64);
    debug::assert(p.isNull());
    {
       var p1 = ptr<i64>::new();
       debug::assert(!p1.isNull());
       p = p1;
    }
    debug::assert(!p.isNull());
}

@test
func testIndex() {
    var p = ptr<i64>::allocate(10);
    // p[9] = 10;
    // debug::assert(p[9] == 10);
}


@test
func testNested() {
    var p = ptr<ptr<i64>>::new();
}
