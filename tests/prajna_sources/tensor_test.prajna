@test
func TestTensor(){
    var shape = [10, 20];
    var ts = Tensor<i64, 2>::Create(shape);
    var bs = ts;

    ts.At([1, 2]) = 2;
    test::Assert(ts.At([1,2]) == 2);
    test::Assert(bs.At([1,2]) == ts.At([1,2]));
    // test::Assert(ts.data.raw_ptr[22] == 2);

    var ts1 = Tensor<f32, 2>::Create(shape);
    ts1.At([1,2]) = 3.1415;
    test::Assert(ts1[1,2] == 3.1415);

    var ts0 = Tensor<i64, 1>::Create([2]);
    ts0[0] = 1;

}


@test
func TestTensorSerialize() {
    var ts = Tensor<i64, 2>::Create([2,2]);
    ts[0, 0] = 0;
    ts[0, 1] = 1;
    ts[1, 0] = 10;
    ts[1, 1] = 11;
    ts.ToString().PrintLine();
}


func TestOptimize(ts0: Tensor<i64, 2>, ts1: Tensor<i64, 2>){
    for i in 0 to ts0.Shape()[0] {
        for j in 0 to ts0.Shape()[1] {
            ts0[i, j] = ts1[i, j];
        }
    }
}
